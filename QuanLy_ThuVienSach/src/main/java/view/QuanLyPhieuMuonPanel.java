/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.sql.Date;
import java.text.ParseException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ChiTietMuon;
import dao.ChiTietMuonDAO;
import dao.DocGiaDAO;
import model.PhieuMuon;
import dao.PhieuMuonDAO;
import dao.SachDAO;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import tienich.ResizeIcons;

/**
 *
 * @author PC
 */
public class QuanLyPhieuMuonPanel extends javax.swing.JPanel {

    private DefaultTableModel model;
    private DocGiaDAO docGiaDAO = new DocGiaDAO();
    private PhieuMuonDAO phieuMuonDAO = new PhieuMuonDAO();
    private List<ChiTietMuon> listChiTietMuon = new ArrayList<>();

    public QuanLyPhieuMuonPanel() {
        initComponents();
        loadPhieuMuon();
        loadCombo();
        setupIMG();
        cboLocTheoTrangThai.setSelectedIndex(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPhieuMuon = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaPhieuMuon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaDocGia = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnTraSach = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNgayTraThucTe = new com.toedter.calendar.JDateChooser();
        txtNgayMuon = new com.toedter.calendar.JDateChooser();
        cboTinhTrang = new javax.swing.JComboBox<>();
        txtNgayHenTra = new com.toedter.calendar.JDateChooser();
        cboTenSachMuon = new javax.swing.JComboBox<>();
        lblQLPM = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuMuon = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        cboLocTheoTrangThai = new javax.swing.JComboBox<>();
        cboLocTheoMaPhieu = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(700, 500));

        pnPhieuMuon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mã phiếu mượn");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Ngày mượn");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Tình trạng");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Ngày hẹn trả");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Mã độc giả");

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add-book-50.png"))); // NOI18N
        btnThem.setText("Thêm ");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update-done-50.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnTraSach.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTraSach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/borrow-book-100.png"))); // NOI18N
        btnTraSach.setText("Trả sách");
        btnTraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraSachActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/broom-50.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Ngày trả");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Tên sách");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Số lượng sách mượn");

        cboTinhTrang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboTenSachMuon.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboTenSachMuon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTenSachMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenSachMuonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPhieuMuonLayout = new javax.swing.GroupLayout(pnPhieuMuon);
        pnPhieuMuon.setLayout(pnPhieuMuonLayout);
        pnPhieuMuonLayout.setHorizontalGroup(
            pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhieuMuonLayout.createSequentialGroup()
                        .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboTenSachMuon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhieuMuonLayout.createSequentialGroup()
                                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboTinhTrang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNgayHenTra, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                        .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgayTraThucTe, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgayMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTraSach, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnPhieuMuonLayout.setVerticalGroup(
            pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPhieuMuonLayout.createSequentialGroup()
                        .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNgayHenTra, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                    .addComponent(cboTenSachMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayMuon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayTraThucTe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPhieuMuonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTraSach, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        lblQLPM.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblQLPM.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblQLPM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/borrow-book-100.png"))); // NOI18N
        lblQLPM.setText("QUẢN LÝ PHIẾU MƯỢN");

        tblPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPhieuMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuMuonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuMuon);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Lọc theo tình trạng sách");

        cboLocTheoTrangThai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboLocTheoTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLocTheoTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLocTheoTrangThaiActionPerformed(evt);
            }
        });

        cboLocTheoMaPhieu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboLocTheoMaPhieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLocTheoMaPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLocTheoMaPhieuActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Lọc theo mã phiếu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblQLPM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboLocTheoTrangThai, 0, 151, Short.MAX_VALUE)
                            .addComponent(cboLocTheoMaPhieu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(pnPhieuMuon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboLocTheoTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboLocTheoMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblQLPM, javax.swing.GroupLayout.PREFERRED_SIZE, 78, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:        
        themPhieu();
        loadPhieuMuon();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        suaPhieu();
        loadPhieuMuon();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraSachActionPerformed
        // TODO add your handling code here:
        traSach();
        loadPhieuMuon();
    }//GEN-LAST:event_btnTraSachActionPerformed

    private void tblPhieuMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMuonMouseClicked
        // TODO add your handling code here:                                         
        int row = tblPhieuMuon.getSelectedRow(); // Lấy dòng được chọn
        if (row >= 0) {
            // Lấy dữ liệu từ JTable
            String maPhieu = tblPhieuMuon.getValueAt(row, 0).toString();
            String maDocGia = tblPhieuMuon.getValueAt(row, 1).toString();
            int maSach = Integer.parseInt(tblPhieuMuon.getValueAt(row, 2).toString());
            String soLuong = tblPhieuMuon.getValueAt(row, 3).toString();
            String ngayMuon = tblPhieuMuon.getValueAt(row, 4).toString();
            String ngayTraThucTe = tblPhieuMuon.getValueAt(row, 5) != null ? tblPhieuMuon.getValueAt(row, 5).toString() : null;
            String tinhTrang = tblPhieuMuon.getValueAt(row, 6).toString();
            String ngayHenTra = tblPhieuMuon.getValueAt(row, 7).toString();

            String tenSach = SachDAO.getTenSachByMa(maSach);

            // Gán vào các component
            txtMaPhieuMuon.setText(maPhieu);
            txtMaDocGia.setText(maDocGia);
            cboTenSachMuon.setSelectedItem(tenSach);
            txtSoLuong.setText(soLuong);
            cboTinhTrang.setSelectedItem(tinhTrang);

            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                txtNgayMuon.setDate(sdf.parse(ngayMuon));
                if (ngayTraThucTe != null && !ngayTraThucTe.isEmpty()) {
                    txtNgayTraThucTe.setDate(sdf.parse(ngayTraThucTe));
                } else {
                    txtNgayTraThucTe.setDate(null);
                }
                txtNgayHenTra.setDate(sdf.parse(ngayHenTra));
            } catch (ParseException e) {
                e.printStackTrace();
            }
        }
        khoaNhap();
    }//GEN-LAST:event_tblPhieuMuonMouseClicked

    private void cboLocTheoTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLocTheoTrangThaiActionPerformed
        // TODO add your handling code here:
        String selected = (String) cboLocTheoTrangThai.getSelectedItem();
        loadPhieuMuon(selected);
    }//GEN-LAST:event_cboLocTheoTrangThaiActionPerformed

    private void cboTenSachMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenSachMuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTenSachMuonActionPerformed

    private void cboLocTheoMaPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLocTheoMaPhieuActionPerformed
        // TODO add your handling code here:
        locTheoMaPhieu();
    }//GEN-LAST:event_cboLocTheoMaPhieuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTraSach;
    private javax.swing.JComboBox<String> cboLocTheoMaPhieu;
    private javax.swing.JComboBox<String> cboLocTheoTrangThai;
    private javax.swing.JComboBox<String> cboTenSachMuon;
    private javax.swing.JComboBox<String> cboTinhTrang;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQLPM;
    private javax.swing.JPanel pnPhieuMuon;
    private javax.swing.JTable tblPhieuMuon;
    private javax.swing.JTextField txtMaDocGia;
    private javax.swing.JTextField txtMaPhieuMuon;
    private com.toedter.calendar.JDateChooser txtNgayHenTra;
    private com.toedter.calendar.JDateChooser txtNgayMuon;
    private com.toedter.calendar.JDateChooser txtNgayTraThucTe;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables

// Hàm mặc định: load tất cả
    private  void loadPhieuMuon() {
        loadPhieuMuon("Tất cả"); // gọi sang hàm có filter
    }

// Hàm có filter tình trạng
    private void loadPhieuMuon(String tinhTrang) {
        String[] columnNames = {"Mã phiếu mượn", "Mã độc giả", "Mã sách", "Số lượng", "Ngày mượn", "Ngày trả thực tế", "Tình trạng", "Ngày hẹn trả"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        List<ChiTietMuon> list;
        if ("Tất cả".equals(tinhTrang)) {
            list = PhieuMuonDAO.getAll();
        } else {
            list = ChiTietMuonDAO.getByTinhTrang(tinhTrang);
        }

        for (ChiTietMuon ctm : list) {
            model.addRow(new Object[]{
                ctm.getPhieuMuon().getMaPhieu(),
                ctm.getPhieuMuon().getMaDocGia(),
                ctm.getMaSach(),
                ctm.getSoLuong(),
                ctm.getPhieuMuon().getNgayMuon(),
                ctm.getNgayTraThucTe(),
                ctm.getTinhTrang(),
                ctm.getPhieuMuon().getNgayHenTra()
            });
        }

        tblPhieuMuon.setModel(model);
    }

    // Hàm xóa trắng form
    private void clearForm() {
        // Cho phép nhập lại mã phiếu và mã độc giả
        txtMaPhieuMuon.setEnabled(true);
        txtMaDocGia.setEnabled(true);

        // Xóa trắng textfield
        txtMaPhieuMuon.setText("");
        txtMaDocGia.setText("");
        txtSoLuong.setText("");

        // Clear date chooser (set về null)
        txtNgayMuon.setDate(null);
        txtNgayHenTra.setDate(null);
        txtNgayTraThucTe.setDate(null);

        // ComboBox về item đầu tiên (nếu có)
        if (cboTenSachMuon.getItemCount() > 0) {
            cboTenSachMuon.setSelectedIndex(0);
        }
        if (cboTinhTrang.getItemCount() > 0) {
            cboTinhTrang.setSelectedIndex(0);
        }
        if (cboLocTheoTrangThai.getItemCount() > 0) {
            cboLocTheoTrangThai.setSelectedIndex(0);
        }

        // Clear luôn selection trong bảng nếu muốn
        tblPhieuMuon.clearSelection();
    }

    private void loadCombo() {
        cboTenSachMuon.removeAllItems();
        cboTinhTrang.removeAllItems();
        cboLocTheoTrangThai.removeAllItems();
        cboLocTheoMaPhieu.removeAllItems();
        List<String> listTenSach = SachDAO.getTenSach();
        for (String ten : listTenSach) {
            cboTenSachMuon.addItem(ten);
        }

        //set cho tình trạng sách
        cboTinhTrang.addItem("Đang mượn");
        cboTinhTrang.addItem("Đã trả");
        cboTinhTrang.addItem("Mất sách");
        cboTinhTrang.addItem("Hỏng");

        cboLocTheoTrangThai.addItem("Tất cả");
        cboLocTheoTrangThai.addItem("Đang mượn");
        cboLocTheoTrangThai.addItem("Đã trả");
        cboLocTheoTrangThai.addItem("Mất sách");
        cboLocTheoTrangThai.addItem("Hỏng");

        cboLocTheoMaPhieu.addItem("Tất cả");
        List<Integer> listMaPhieu = PhieuMuonDAO.getAllMaPhieu();
        for (int ma : listMaPhieu) {
            cboLocTheoMaPhieu.addItem(String.valueOf(ma));
        }

    }

    private void suaPhieu() {
        try {
            int maPhieu = Integer.parseInt(txtMaPhieuMuon.getText().trim());
            int maDocGia = Integer.parseInt(txtMaDocGia.getText().trim());

            // Lấy mã sách từ combo
            String tenSach = cboTenSachMuon.getSelectedItem().toString();
            int maSach = SachDAO.getMaSachByTen(tenSach);

            int soLuong = Integer.parseInt(txtSoLuong.getText().trim());
            String tinhTrang = cboTinhTrang.getSelectedItem().toString();
            Date ngayTraThucTe = (Date) txtNgayTraThucTe.getDate();

            // Gói dữ liệu vào object
            PhieuMuon pm = new PhieuMuon();
            pm.setMaPhieu(maPhieu);
            pm.setMaDocGia(maDocGia);

            ChiTietMuon ct = new ChiTietMuon();
            ct.setPhieuMuon(pm);
            ct.setMaSach(maSach);
            ct.setSoLuong(soLuong);
            ct.setTinhTrang(tinhTrang);
            ct.setNgayTraThucTe(ngayTraThucTe);

            boolean result = ChiTietMuonDAO.suaChiTietMuon(ct);

            if (result) {
                JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn thành công!");
                loadPhieuMuon();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa phiếu thất bại!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void traSach() {
        try {
            int row = tblPhieuMuon.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn phiếu mượn để trả!");
                return;
            }

            String tinhTrang = cboTinhTrang.getSelectedItem().toString();
            if (tinhTrang.equals("Mất sách") || tinhTrang.equals("Hỏng")) {
                JOptionPane.showMessageDialog(this, "Sách bị " + tinhTrang + " không thể trả!");
                return;
            }
            if ("Đã trả".equalsIgnoreCase(tinhTrang)) {
                JOptionPane.showMessageDialog(this, "Phiếu này đã trả rồi, không thể trả tiếp!");
                return;
            }

            int maPhieu = Integer.parseInt(tblPhieuMuon.getValueAt(row, 0).toString());
            int maSach = Integer.parseInt(tblPhieuMuon.getValueAt(row, 2).toString());

            java.util.Date ngayTra = txtNgayTraThucTe.getDate(); // nếu null thì để trống

            boolean kq = ChiTietMuonDAO.traSach(maPhieu, maSach, ngayTra);

            if (kq) {
                JOptionPane.showMessageDialog(this, "Trả sách thành công!");
                loadPhieuMuon(); // reload bảng
            } else {
                JOptionPane.showMessageDialog(this, "Trả sách thất bại!");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }

    private void themPhieu() {
        String tenSach = cboTenSachMuon.getSelectedItem().toString();
        int maSach = SachDAO.getMaSachByTen(tenSach);

        PhieuMuon pm = new PhieuMuon();
        pm.setMaDocGia(Integer.parseInt(txtMaDocGia.getText()));
        pm.setNgayMuon(txtNgayMuon.getDate());
        pm.setNgayHenTra(txtNgayHenTra.getDate());

        ChiTietMuon ct = new ChiTietMuon();
        ct.setPhieuMuon(pm);
        ct.setMaSach(maSach);
        ct.setSoLuong(Integer.parseInt(txtSoLuong.getText()));

        boolean result = ChiTietMuonDAO.themPhieuMuonVaChiTiet(ct);

        if (result) {
            JOptionPane.showMessageDialog(this, "Thêm phiếu mượn và chi tiết thành công!");
            loadPhieuMuon(); // reload lại bảng
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        }
    }

    private void locTheoMaPhieu() {
        String selected = (String) cboLocTheoMaPhieu.getSelectedItem();
        if (selected == null || selected.equals("Tất cả")) {
            loadPhieuMuon(); // load toàn bộ
            return;
        }

        int maPhieu = Integer.parseInt(selected);

        String[] columnNames = {"Mã phiếu mượn", "Mã độc giả", "Mã sách", "Số lượng",
            "Ngày mượn", "Ngày trả thực tế", "Tình trạng", "Ngày hẹn trả"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        List<ChiTietMuon> list = PhieuMuonDAO.getByMaPhieu(maPhieu);
        for (ChiTietMuon ctm : list) {
            model.addRow(new Object[]{
                ctm.getPhieuMuon().getMaPhieu(),
                ctm.getPhieuMuon().getMaDocGia(),
                ctm.getMaSach(),
                ctm.getSoLuong(),
                ctm.getPhieuMuon().getNgayMuon(),
                ctm.getNgayTraThucTe(),
                ctm.getTinhTrang(),
                ctm.getPhieuMuon().getNgayHenTra()
            });
        }

        tblPhieuMuon.setModel(model);
    }

    private void setupIMG() {
//        ResizeIcons.resizeCurrentIcon(lblQLPM);
        ResizeIcons.resizeCurrentIcon(btnThem);
        ResizeIcons.resizeCurrentIcon(btnSua);
        ResizeIcons.resizeCurrentIcon(btnLamMoi);
        ResizeIcons.resizeCurrentIcon(btnTraSach);
    }

    private void khoaNhap() {
                // khóa mấy ô text field
        txtMaPhieuMuon.setEnabled(false);
        txtMaDocGia.setEnabled(false);
        txtNgayTraThucTe.setEnabled(false);
    }

}
